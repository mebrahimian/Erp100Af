@using Erp100Af.Application.Common.Interfaces
@using Erp100Af.Infrastructure.Services

@inject IClientPreferenceService PreferenceService  

@inherits LayoutComponentBase
<HeadContent>
    <link href="~/Site.css" rel="stylesheet" />
</HeadContent>
<MudRTLProvider RightToLeft="@_isRTL">
<MudThemeProvider IsDarkMode="_isDarkMode" DefaultScrollbar="true" Theme="myTheme" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">Application</MudText>
        <MudSpacer />
        <LanguageSelector />
        <MudIconButton Icon="@(_isRTL ? @Icons.Material.Filled.FormatTextdirectionLToR : @Icons.Material.Filled.FormatTextdirectionRToL)" OnClick="ToggleRightToLeft" 
                       Color="Color.Inherit" />
        <MudIconButton Icon="@(DarkLightModeButtonIcon)" Color="Color.Inherit" OnClick="@DarkModeToggle" />
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />
    </MudAppBar>
    <MudDrawer id="nav-drawer" @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent Class="pt-16 pa-4">
        @Body
    </MudMainContent>
</MudLayout>
</MudRTLProvider>


<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    private bool _drawerOpen = true;
    private bool _isDarkMode = true;
    private bool _isRTL = true;
    private MudTheme? _theme = null;
    private bool _initialized = false;
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !_initialized)
        {
            await PreferenceService.LoadAsync(); // اینجا localStorage خوانده میشه
            var prefs = PreferenceService.Preference;
            _isDarkMode = PreferenceService.Preference.IsDarkMode;
            _isRTL = PreferenceService.Preference.IsRtl;
            _drawerOpen = PreferenceService.Preference.IsDrawerOpen;
            _initialized = true;
            StateHasChanged(); // برای به‌روزرسانی UI
        }
    }

    protected override async Task OnInitializedAsync()
    {
        
        base.OnInitialized();
       
        // await PreferenceService.LoadAsync();
        
        _theme = new()
        {
            PaletteLight = _lightPalette,
            PaletteDark = _darkPalette,
            LayoutProperties = new LayoutProperties()
        };
        
    }

    private async Task ToggleRightToLeft()
    {
        _isRTL = !_isRTL;
        PreferenceService.Preference.IsRtl = _isRTL;
        await PreferenceService.SaveAsync();

    }
    private async Task DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
        PreferenceService.Preference.IsDrawerOpen = _drawerOpen;
        await PreferenceService.SaveAsync();
    }

    private async Task DarkModeToggle()
    {
        _isDarkMode = !_isDarkMode;
        PreferenceService.Preference.IsDarkMode = _isDarkMode;
        await PreferenceService.SaveAsync();
    }

    private readonly PaletteLight _lightPalette = new()
    {
        Black = "#110e2d",
        AppbarText = "#424242",
        AppbarBackground = "rgba(255,255,255,0.8)",
        DrawerBackground = "#ffffff",
        GrayLight = "#e8e8e8",
        GrayLighter = "#f9f9f9",
    };

    private readonly PaletteDark _darkPalette = new()
    {
        Primary = "#7e6fff",
        Surface = "#1e1e2d",
        Background = "#1a1a27",
        BackgroundGray = "#151521",
        AppbarText = "#92929f",
        AppbarBackground = "rgba(26,26,39,0.8)",
        DrawerBackground = "#1a1a27",
        ActionDefault = "#74718e",
        ActionDisabled = "#9999994d",
        ActionDisabledBackground = "#605f6d4d",
        TextPrimary = "#b2b0bf",
        TextSecondary = "#92929f",
        TextDisabled = "#ffffff33",
        DrawerIcon = "#92929f",
        DrawerText = "#92929f",
        GrayLight = "#2a2833",
        GrayLighter = "#1e1e2d",
        Info = "#4a86ff",
        Success = "#3dcb6c",
        Warning = "#ffb545",
        Error = "#ff3f5f",
        LinesDefault = "#33323e",
        TableLines = "#33323e",
        Divider = "#292838",
        OverlayLight = "#1e1e2d80",
    };

    public string DarkLightModeButtonIcon => _isDarkMode switch
    {
        true => Icons.Material.Rounded.AutoMode,
        false => Icons.Material.Outlined.DarkMode,
    };
    
    private readonly MudTheme myTheme = new MudTheme()
        {
            Typography = new Typography
            {
                Default = new DefaultTypography
                {
                    FontFamily = new[] { "Vazir UI", "sans-serif" }
                }
            }
        };




}


